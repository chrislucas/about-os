buildscript {
    apply from: "tools/dependencies-version.gradle"
    ext.ktversion = versions.ktversion
}

plugins {
    id 'java'

    /**
     * https://stackoverflow.com/questions/37555196/in-gradle-how-to-use-a-variable-for-a-plugin-version
     * "Where «plugin version» and «plugin id» must be constant, literal, strings.
     * No other statements are allowed; their presence will cause a compilation error."
     *
     * # https://docs.gradle.org/current/userguide/plugins.html#plugins_dsl_limitations
     *
     * * Importante
     * # https://docs.gradle.org/current/userguide/plugins.html#sec:constrained_syntax
     * */

    id "org.jetbrains.kotlin.jvm" version "$ktversion"
    // ou adicionamos o plugin kotlin jvm ou o multiplataforma
    //id 'org.jetbrains.kotlin.multiplatform' version "$kotlin_version"
    id 'org.jetbrains.kotlin.plugin.serialization' version "$ktversion"
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.reactivex.rxjava3:rxjava:3.1.5'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-protobuf:1.3.3'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    implementation "io.klogging:klogging-jvm:0.4.9"
    implementation 'io.github.microutils:kotlin-logging-jvm:2.1.23'

    // configurando o logback

    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.9'


    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}